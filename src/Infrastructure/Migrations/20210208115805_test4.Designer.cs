// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210208115805_test4")]
    partial class test4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryTypeId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Domain.CategoryType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CategoryType");
                });

            modelBuilder.Entity("Domain.FileCategory", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("FileStorageId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoryId", "FileStorageId");

                    b.HasIndex("FileStorageId");

                    b.ToTable("FileCategory");
                });

            modelBuilder.Entity("Domain.FileStorage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginFullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageFullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FileStorage");
                });

            modelBuilder.Entity("Domain.Newspaper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Newspaper");
                });

            modelBuilder.Entity("Domain.NewspaperCategoryUserSubcribe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("NewspaperCategoryUserSubcribes");
                });

            modelBuilder.Entity("Domain.NewspaperSubCategory", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("NewspaperId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoryId", "NewspaperId");

                    b.HasIndex("NewspaperId");

                    b.ToTable("NewspaperSubCategories");
                });

            modelBuilder.Entity("Domain.NewspaperSubCategoryUserSubcribe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("NewspaperSubCategoryCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NewspaperSubCategoryNewspaperId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("NewspaperSubCategoryCategoryId", "NewspaperSubCategoryNewspaperId");

                    b.ToTable("NewspaperSubCategoryUserSubcribes");
                });

            modelBuilder.Entity("Domain.NewspaperUserSubcribe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("NewspaperId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NewspaperId");

                    b.HasIndex("UserId");

                    b.ToTable("NewspaperUserSubcribes");
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_LoiIchCuaCoDongKhongKiemSoatTruoc2015", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("StockReportAccountingBalanceId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("StockReportAccountingBalanceId")
                        .IsUnique();

                    b.ToTable("RPAB_LoiIchCuaCoDongKhongKiemSoatTruoc2015");
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_NoPhaiTra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("StockReportAccountingBalanceId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("StockReportAccountingBalanceId")
                        .IsUnique();

                    b.ToTable("RPAB_NoPhaiTra");
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_TaiSanDaiHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("StockReportAccountingBalanceId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("StockReportAccountingBalanceId")
                        .IsUnique();

                    b.ToTable("RPAB_TaiSanDaiHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_TaiSanNganHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("StockReportAccountingBalanceId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("StockReportAccountingBalanceId")
                        .IsUnique();

                    b.ToTable("RPAB_TaiSanNganHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_VonChuSoHuu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("StockReportAccountingBalanceId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("StockReportAccountingBalanceId")
                        .IsUnique();

                    b.ToTable("RPAB_VonChuSoHuu");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_BatDongSanDauTu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("HaoMonBatDongSanDauTu")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("NguyenGiaBatDongSanDauTu")
                        .HasColumnType("real");

                    b.Property<long>("RPAB_TaiSanDaiHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanDaiHanId")
                        .IsUnique();

                    b.ToTable("Criteria_BatDongSanDauTu");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanDauTuTaiChinhDaiHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DauTuDaiHanGiuDenNgayDaoHan")
                        .HasColumnType("real");

                    b.Property<float>("DauTuDaiHanKhac")
                        .HasColumnType("real");

                    b.Property<float>("DauTuVaoCongTyCon")
                        .HasColumnType("real");

                    b.Property<float>("DauTuVaoCongTyLienKetLienDoanh")
                        .HasColumnType("real");

                    b.Property<float>("DuPhongGiamGiaDauTuTaiChinhDaiHan")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanDaiHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanDaiHanId")
                        .IsUnique();

                    b.ToTable("Criteria_CacKhoanDauTuTaiChinhDaiHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanDauTuTaiChinhNganHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DauTuGiuDenNgayDaoHan")
                        .HasColumnType("real");

                    b.Property<float>("DauTuNganHan")
                        .HasColumnType("real");

                    b.Property<float>("DuPhongGiamGiaDauTuNganHan")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanNganHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanNganHanId")
                        .IsUnique();

                    b.ToTable("Criteria_CacKhoanDauTuTaiChinhNganHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanPhaiThuDaiHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DuPhongPhaiThuDaiHanKhoDoi")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("PhaiThuDaiHanCuaKhachHang")
                        .HasColumnType("real");

                    b.Property<float>("PhaiThuDaiHanKhac")
                        .HasColumnType("real");

                    b.Property<float>("PhaiThuDaiHanNoiBo")
                        .HasColumnType("real");

                    b.Property<float>("PhaiThuVeChoVayDaiHan")
                        .HasColumnType("real");

                    b.Property<long>("RPAB_TaiSanDaiHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.Property<float>("TraTruocDaiHanNguoiBan")
                        .HasColumnType("real");

                    b.Property<float>("VonKinhDoanhODonViTrucThuoc")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanDaiHanId")
                        .IsUnique();

                    b.ToTable("Criteria_CacKhoanPhaiThuDaiHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanPhaiThuNganHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CacKhoanPhaiThuKhac")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DuPhongPhaiThuNganHanKhoDoi")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("PhaiThuKhachHang")
                        .HasColumnType("real");

                    b.Property<float>("PhaiThuNoiBoNganHan")
                        .HasColumnType("real");

                    b.Property<float>("PhaiThuTheoTienDoKeHoachHopDongXayDung")
                        .HasColumnType("real");

                    b.Property<float>("PhaiThuVeChoVayNganHan")
                        .HasColumnType("real");

                    b.Property<long>("RPAB_TaiSanNganHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TaiSanThieuChoXuLy")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.Property<float>("TraTruocChoNguoiBan")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanNganHanId")
                        .IsUnique();

                    b.ToTable("Criteria_CacKhoanPhaiThuNganHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_HangTonKho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DuPhongGiamGiaHangTonKho")
                        .HasColumnType("real");

                    b.Property<float>("HangTonKho")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanNganHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanNganHanId")
                        .IsUnique();

                    b.ToTable("Criteria_HangTonKho");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_LoiTheThuongMaiTruoc2015", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanDaiHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanDaiHanId")
                        .IsUnique();

                    b.ToTable("Criteria_LoiTheThuongMaiTruoc2015");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_NguonKinhPhiVanQuyKhac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_VonChuSoHuuId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_VonChuSoHuuId")
                        .IsUnique();

                    b.ToTable("Criteria_NguonKinhPhiVanQuyKhac");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_NoDaiHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChiPhiPhaiTraDaiHan")
                        .HasColumnType("real");

                    b.Property<float>("CoPhieuUuDai")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DoanhThuChuaThucHienDaiHan")
                        .HasColumnType("real");

                    b.Property<float>("DuPhongPhaiTraDaiHan")
                        .HasColumnType("real");

                    b.Property<float>("DuPhongTroCapMatViecLam")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("NguoiMuaTraTruocDaiHan")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraDaiHanKhac")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraDaiHanNguoiBan")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraDaiHanNoiBo")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraNoiBoVeVonKinhDoanh")
                        .HasColumnType("real");

                    b.Property<float>("QuyPhatTrienKhoaHocVaCongNghe")
                        .HasColumnType("real");

                    b.Property<long>("RPAB_NoPhaiTraId")
                        .HasColumnType("bigint");

                    b.Property<float>("ThueThuNhapHoanLaiPhaiTra")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.Property<float>("TraiPhieuChuyenDoi")
                        .HasColumnType("real");

                    b.Property<float>("VayVaNoDaiHan")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_NoPhaiTraId")
                        .IsUnique();

                    b.ToTable("Criteria_NoDaiHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_NoNganHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CacKhoanPhaiTraPhaiNopNganHanKhac")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiPhaiTra")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DoanhThuChuaThucHienNganHan")
                        .HasColumnType("real");

                    b.Property<float>("DuPhongPhaiTraNganHan")
                        .HasColumnType("real");

                    b.Property<float>("GiaoDichMuaBanLaiTraiPhieuChinhPhu")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("NguoiMuaTraTienTruoc")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraNguoiBan")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraNguoiLaoDong")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraNoiBo")
                        .HasColumnType("real");

                    b.Property<float>("PhaiTraTheoTienDoKeHoachHopDongXayDung")
                        .HasColumnType("real");

                    b.Property<float>("QuyBinhOnGia")
                        .HasColumnType("real");

                    b.Property<float>("QuyKhenThuongPhucLoi")
                        .HasColumnType("real");

                    b.Property<long>("RPAB_NoPhaiTraId")
                        .HasColumnType("bigint");

                    b.Property<float>("ThueVaCacKhoanPhaiNopNhaNuoc")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.Property<float>("VayVaNoNganHan")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_NoPhaiTraId")
                        .IsUnique();

                    b.ToTable("Criteria_NoNganHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanCoDinh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChiPhiXayDungCoBanDoDang")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanDaiHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TaiSanCoDinhHuuHinh")
                        .HasColumnType("real");

                    b.Property<float>("TaiSanCoDinhThueTaiChinh")
                        .HasColumnType("real");

                    b.Property<float>("TaiSanCoDinhVoHinh")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanDaiHanId")
                        .IsUnique();

                    b.ToTable("Criteria_TaiSanCoDinh");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanDaiHanKhac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChiPhiTraTruocDaiHan")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("LoiTheThuongMai")
                        .HasColumnType("real");

                    b.Property<long>("RPAB_TaiSanDaiHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TaiSanDaiHanKhac")
                        .HasColumnType("real");

                    b.Property<float>("TaiSanThueThuNhapHoanLai")
                        .HasColumnType("real");

                    b.Property<float>("ThietBiVatTuPhuTungThayTheDaiHan")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanDaiHanId")
                        .IsUnique();

                    b.ToTable("Criteria_TaiSanDaiHanKhac");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanDoDangDaiHan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChiPhiSanXuatKinhDoanhDoDangDaiHan")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiXayDungCoBanDoDang")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanDaiHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanDaiHanId")
                        .IsUnique();

                    b.ToTable("Criteria_TaiSanDoDangDaiHan");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanNganHanKhac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChiPhiTraTruocNganHan")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("GiaoDichMuaBanLaiTraiPhieuChinhPhu")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanNganHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("TaiSanNganHanKhac")
                        .HasColumnType("real");

                    b.Property<float>("ThueGTGTDuocKhauTru")
                        .HasColumnType("real");

                    b.Property<float>("ThueVaCacKhoanKhacPhaiThuNhaNuoc")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanNganHanId")
                        .IsUnique();

                    b.ToTable("Criteria_TaiSanNganHanKhac");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TienVaCacKhoanTuongDuongTien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CacKhoanTuongDuongTien")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RPAB_TaiSanNganHanId")
                        .HasColumnType("bigint");

                    b.Property<float>("Tien")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_TaiSanNganHanId")
                        .IsUnique();

                    b.ToTable("Criteria_TienVaCacKhoanTuongDuongTien");
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_VonVaCacQuy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChenhLechTyGiaHoiDoai")
                        .HasColumnType("real");

                    b.Property<float>("ChenhLenhDanhGiaLaiTaiSan")
                        .HasColumnType("real");

                    b.Property<float>("CoPhieuQuy")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("LoiIchCoDongKhongKiemSoat")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanSauThueChuaPhanPhoi")
                        .HasColumnType("real");

                    b.Property<float>("NguonVonDauTuXDCB")
                        .HasColumnType("real");

                    b.Property<float>("QuyDauTuPhatTrien")
                        .HasColumnType("real");

                    b.Property<float>("QuyDuPhongTaiChinh")
                        .HasColumnType("real");

                    b.Property<float>("QuyHoTroSapXepDoanhNghiep")
                        .HasColumnType("real");

                    b.Property<float>("QuyKhacThuocVonChuSoHuu")
                        .HasColumnType("real");

                    b.Property<float>("QuyenChonChuyenDoiTraiPhieu")
                        .HasColumnType("real");

                    b.Property<long>("RPAB_VonChuSoHuuId")
                        .HasColumnType("bigint");

                    b.Property<float>("ThangDuVonCoPhan")
                        .HasColumnType("real");

                    b.Property<float>("TongCong")
                        .HasColumnType("real");

                    b.Property<float>("VonGop")
                        .HasColumnType("real");

                    b.Property<float>("VonKhacCuaChuSoHuu")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RPAB_VonChuSoHuuId")
                        .IsUnique();

                    b.ToTable("Criteria_VonVaCacQuy");
                });

            modelBuilder.Entity("Domain.StockCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockCompany");
                });

            modelBuilder.Entity("Domain.StockCompanyDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StockCompanyDocument");
                });

            modelBuilder.Entity("Domain.StockCompanyLeadership", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("StockCompanyLeadership");
                });

            modelBuilder.Entity("Domain.StockForeignerHolderRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("CurrentHold")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("MaximumCanHold")
                        .HasColumnType("real");

                    b.Property<float>("RoomLeft")
                        .HasColumnType("real");

                    b.Property<DateTime>("TakeDataAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("StockForeignerHolderRate");
                });

            modelBuilder.Entity("Domain.StockGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AvgBeta")
                        .HasColumnType("real");

                    b.Property<float>("AvgEPS")
                        .HasColumnType("real");

                    b.Property<float>("AvgPB")
                        .HasColumnType("real");

                    b.Property<float>("AvgPE")
                        .HasColumnType("real");

                    b.Property<float>("AvgPrice")
                        .HasColumnType("real");

                    b.Property<float>("AvgROA")
                        .HasColumnType("real");

                    b.Property<float>("AvgROE")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ComparePrice")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("NNSoHuu")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TongKL")
                        .HasColumnType("bigint");

                    b.Property<long>("VonTT")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("StockGroup");
                });

            modelBuilder.Entity("Domain.StockIndex", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BVPS")
                        .HasColumnType("real");

                    b.Property<float>("Beta")
                        .HasColumnType("real");

                    b.Property<float>("CaoNhat52Tuan")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("EPS")
                        .HasColumnType("real");

                    b.Property<float>("FreeFloat")
                        .HasColumnType("real");

                    b.Property<float>("GiaCaoNhat")
                        .HasColumnType("real");

                    b.Property<float>("GiaMoCua")
                        .HasColumnType("real");

                    b.Property<float>("GiaSan")
                        .HasColumnType("real");

                    b.Property<float>("GiaThapNhat")
                        .HasColumnType("real");

                    b.Property<float>("GiaTran")
                        .HasColumnType("real");

                    b.Property<string>("InforDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("KLGDTrongPhien")
                        .HasColumnType("bigint");

                    b.Property<long>("KLGDTrungBinh10Phien")
                        .HasColumnType("bigint");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("PB")
                        .HasColumnType("real");

                    b.Property<float>("PE")
                        .HasColumnType("real");

                    b.Property<float>("ROAA")
                        .HasColumnType("real");

                    b.Property<float>("ROAE")
                        .HasColumnType("real");

                    b.Property<string>("SoCPLuuHanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ThapNhat52Tuan")
                        .HasColumnType("real");

                    b.Property<string>("TySuatCoTuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("VonHoaThiTruong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("StockIndex");
                });

            modelBuilder.Entity("Domain.StockMainInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AvgBeta")
                        .HasColumnType("real");

                    b.Property<float>("AvgEPS")
                        .HasColumnType("real");

                    b.Property<float>("AvgPB")
                        .HasColumnType("real");

                    b.Property<float>("AvgPE")
                        .HasColumnType("real");

                    b.Property<float>("AvgPrice")
                        .HasColumnType("real");

                    b.Property<float>("AvgROA")
                        .HasColumnType("real");

                    b.Property<float>("AvgROE")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ComparePrice")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InforDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("NNSoHuu")
                        .HasColumnType("bigint");

                    b.Property<long>("TongKL")
                        .HasColumnType("bigint");

                    b.Property<long>("VonTT")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("StockMainInformation");
                });

            modelBuilder.Entity("Domain.StockNews", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StockNews");
                });

            modelBuilder.Entity("Domain.StockReportAccountingBalance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TongCongNguonVon")
                        .HasColumnType("real");

                    b.Property<float>("TongCongTaiSan")
                        .HasColumnType("real");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockReportAccountingBalance");
                });

            modelBuilder.Entity("Domain.StockReportBusiness", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CacKhoanGiamTruDoanhThu")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiBanHang")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiKhac")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiQuanLyDoanhNghiep")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiTaiChinh")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiTaiChinh_ChiPhiLaiVay")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiThueTNDN")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiThueTNDN_HienHanh")
                        .HasColumnType("real");

                    b.Property<float>("ChiPhiThueTNDN_HoanLai")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("DoanhThuHoatDongTaiChinh")
                        .HasColumnType("real");

                    b.Property<float>("DoanhThuThuan")
                        .HasColumnType("real");

                    b.Property<float>("GiaVonHangBan")
                        .HasColumnType("real");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("LoiIchCoDongThieuSo")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanGop")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanHoacLoTrongCongTyLienKet")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanHoacLoTrongCongTyLienKetTruoc2015")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanKhac")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanSauThueCuaCongTyMe")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanSauThueTNDN")
                        .HasColumnType("real");

                    b.Property<float>("LoiNhuanThuanTuHoatDongKinhDoanh")
                        .HasColumnType("real");

                    b.Property<string>("Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ThuNhapKhac")
                        .HasColumnType("real");

                    b.Property<float>("TongDoanhThuHoatDongKinhDoanh")
                        .HasColumnType("real");

                    b.Property<float>("TongLoiNhuanKeToanTruocThue")
                        .HasColumnType("real");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockReportBusiness");
                });

            modelBuilder.Entity("Domain.StockReportCashFlow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StockReportCashFlow");
                });

            modelBuilder.Entity("Domain.StockShareholder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SharePercent")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("StockShareholder");
                });

            modelBuilder.Entity("Domain.StockTransactionHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("GiaBinhQuan")
                        .HasColumnType("real");

                    b.Property<float>("GiaCaoNhat")
                        .HasColumnType("real");

                    b.Property<float>("GiaDongCua")
                        .HasColumnType("real");

                    b.Property<float>("GiaDongCuaDieuChinh")
                        .HasColumnType("real");

                    b.Property<float>("GiaMoCua")
                        .HasColumnType("real");

                    b.Property<float>("GiaThapNhat")
                        .HasColumnType("real");

                    b.Property<long>("KhoiLuongKhopLenh")
                        .HasColumnType("bigint");

                    b.Property<long>("KhoiLuongThoaThuan")
                        .HasColumnType("bigint");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("ThayDoiDiem")
                        .HasColumnType("real");

                    b.Property<float>("ThayDoiPhanTram")
                        .HasColumnType("real");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StockTransactionHistory");
                });

            modelBuilder.Entity("Domain.Visitor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cookie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Query")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueryString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.HasOne("Domain.CategoryType", "Type")
                        .WithMany()
                        .HasForeignKey("CategoryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.FileCategory", b =>
                {
                    b.HasOne("Domain.Category", "Category")
                        .WithMany("Files")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.FileStorage", "File")
                        .WithMany("Categories")
                        .HasForeignKey("FileStorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.FileStorage", b =>
                {
                    b.HasOne("Domain.ApplicationUser", "User")
                        .WithMany("Files")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Domain.NewspaperCategoryUserSubcribe", b =>
                {
                    b.HasOne("Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.ApplicationUser", "User")
                        .WithMany("NewspaperCategoryUserSubcribes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Domain.NewspaperSubCategory", b =>
                {
                    b.HasOne("Domain.Category", "Category")
                        .WithMany("Newspapers")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Newspaper", "Newspaper")
                        .WithMany("SubCategories")
                        .HasForeignKey("NewspaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.NewspaperSubCategoryUserSubcribe", b =>
                {
                    b.HasOne("Domain.ApplicationUser", "User")
                        .WithMany("NewspaperSubCategorySubscribes")
                        .HasForeignKey("UserId");

                    b.HasOne("Domain.NewspaperSubCategory", "NewspaperSubCategory")
                        .WithMany("UserSubcribes")
                        .HasForeignKey("NewspaperSubCategoryCategoryId", "NewspaperSubCategoryNewspaperId");
                });

            modelBuilder.Entity("Domain.NewspaperUserSubcribe", b =>
                {
                    b.HasOne("Domain.Newspaper", "Newspaper")
                        .WithMany()
                        .HasForeignKey("NewspaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.ApplicationUser", "User")
                        .WithMany("NewspaperSubscribes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_LoiIchCuaCoDongKhongKiemSoatTruoc2015", b =>
                {
                    b.HasOne("Domain.StockReportAccountingBalance", "ParentReport")
                        .WithOne("CriteriaLoiIchCuaCoDongKhongKiemSoatTruoc2015")
                        .HasForeignKey("Domain.ReportEntity.RPAB_LoiIchCuaCoDongKhongKiemSoatTruoc2015", "StockReportAccountingBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_NoPhaiTra", b =>
                {
                    b.HasOne("Domain.StockReportAccountingBalance", "ParentReport")
                        .WithOne("CriteriaNoPhaiTra")
                        .HasForeignKey("Domain.ReportEntity.RPAB_NoPhaiTra", "StockReportAccountingBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_TaiSanDaiHan", b =>
                {
                    b.HasOne("Domain.StockReportAccountingBalance", "ParentReport")
                        .WithOne("CriteriaTaiSanDaiHan")
                        .HasForeignKey("Domain.ReportEntity.RPAB_TaiSanDaiHan", "StockReportAccountingBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_TaiSanNganHan", b =>
                {
                    b.HasOne("Domain.StockReportAccountingBalance", "ParentReport")
                        .WithOne("CriteriaTaiSanNganHan")
                        .HasForeignKey("Domain.ReportEntity.RPAB_TaiSanNganHan", "StockReportAccountingBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.RPAB_VonChuSoHuu", b =>
                {
                    b.HasOne("Domain.StockReportAccountingBalance", "ParentReport")
                        .WithOne("CriteriaVonChuSuHuu")
                        .HasForeignKey("Domain.ReportEntity.RPAB_VonChuSoHuu", "StockReportAccountingBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_BatDongSanDauTu", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanDaiHan", "ParentRecord")
                        .WithOne("BatDongSanDauTu")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_BatDongSanDauTu", "RPAB_TaiSanDaiHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanDauTuTaiChinhDaiHan", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanDaiHan", "ParentRecord")
                        .WithOne("CacKhoanDauTuTaiChinhDaiHan")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanDauTuTaiChinhDaiHan", "RPAB_TaiSanDaiHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanDauTuTaiChinhNganHan", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanNganHan", "ParentRecord")
                        .WithOne("CacKhoanDauTuTaiChinhNganHan")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanDauTuTaiChinhNganHan", "RPAB_TaiSanNganHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanPhaiThuDaiHan", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanDaiHan", "ParentRecord")
                        .WithOne("CacKhoanPhaiThuDaiHan")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanPhaiThuDaiHan", "RPAB_TaiSanDaiHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanPhaiThuNganHan", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanNganHan", "ParentRecord")
                        .WithOne("CacKhoanPhaiThuNganHan")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_CacKhoanPhaiThuNganHan", "RPAB_TaiSanNganHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_HangTonKho", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanNganHan", "ParentRecord")
                        .WithOne("HangTonKho")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_HangTonKho", "RPAB_TaiSanNganHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_LoiTheThuongMaiTruoc2015", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanDaiHan", "ParentRecord")
                        .WithOne("LoiTheThuongMaiTruoc2015")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_LoiTheThuongMaiTruoc2015", "RPAB_TaiSanDaiHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_NguonKinhPhiVanQuyKhac", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_VonChuSoHuu", "ParentRecord")
                        .WithOne("NguonKinhPhiVanQuyKhac")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_NguonKinhPhiVanQuyKhac", "RPAB_VonChuSoHuuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_NoDaiHan", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_NoPhaiTra", "ParentRecord")
                        .WithOne("NoDaiHan")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_NoDaiHan", "RPAB_NoPhaiTraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_NoNganHan", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_NoPhaiTra", "ParentRecord")
                        .WithOne("NoNganHan")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_NoNganHan", "RPAB_NoPhaiTraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanCoDinh", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanDaiHan", "ParentRecord")
                        .WithOne("TaiSanCoDinh")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanCoDinh", "RPAB_TaiSanDaiHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanDaiHanKhac", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanDaiHan", "ParentRecord")
                        .WithOne("TaiSanDaiHanKhac")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanDaiHanKhac", "RPAB_TaiSanDaiHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanDoDangDaiHan", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanDaiHan", "ParentRecord")
                        .WithOne("TaiSanDoDangDaiHan")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanDoDangDaiHan", "RPAB_TaiSanDaiHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanNganHanKhac", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanNganHan", "ParentRecord")
                        .WithOne("TaiSanNganHanKhac")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_TaiSanNganHanKhac", "RPAB_TaiSanNganHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_TienVaCacKhoanTuongDuongTien", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_TaiSanNganHan", "ParentRecord")
                        .WithOne("TienVaCacKhoanTuongDuongTien")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_TienVaCacKhoanTuongDuongTien", "RPAB_TaiSanNganHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ReportEntity.ReportAccountingBalance.Criteria_VonVaCacQuy", b =>
                {
                    b.HasOne("Domain.ReportEntity.RPAB_VonChuSoHuu", "ParentRecord")
                        .WithOne("VonVaCacQuy")
                        .HasForeignKey("Domain.ReportEntity.ReportAccountingBalance.Criteria_VonVaCacQuy", "RPAB_VonChuSoHuuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.StockCompanyLeadership", b =>
                {
                    b.HasOne("Domain.StockCompany", "Company")
                        .WithMany("Leaderships")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.StockForeignerHolderRate", b =>
                {
                    b.HasOne("Domain.StockCompany", "Company")
                        .WithMany("ForeignerHolderRates")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.StockShareholder", b =>
                {
                    b.HasOne("Domain.StockCompany", "Company")
                        .WithMany("MainShareholder")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
